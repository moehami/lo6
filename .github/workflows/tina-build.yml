name: Build & Sync TinaCMS Schema

on:
  push:
    branches:
      - main
      - develop
      - staging
      - preview/*

jobs:
  build-tina:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install

      # ðŸ”¹ Detect branch name
      - name: Get branch name
        id: branch
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "branch=$BRANCH_NAME" >> $GITHUB_ENV

      # ðŸ”¹ Check TinaCMS GraphQL schema status
      - name: Check if TinaCMS schema exists
        id: check-schema
        run: |
          echo "Checking schema for branch: ${{ env.branch }}"
          STATUS=$(curl -s -H "X-API-KEY: ${{ secrets.TINA_TOKEN }}" \
            "https://content.tinajs.io/content/${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}/graphql?branch=${{ env.branch }}" \
            -o /dev/null -w "%{http_code}")

          if [ "$STATUS" -ne 200 ]; then
            echo "Schema missing"
            echo "missing=true" >> $GITHUB_ENV
          else
            echo "Schema exists"
            echo "missing=false" >> $GITHUB_ENV
          fi

      # ðŸ”¹ Init schema if missing
      - name: Run TinaCMS backend init
        if: env.missing == 'true'
        run: npx tinacms init --branch ${{ env.branch }}
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}

      # ðŸ”¹ Push schema if exists (keeps Tina Cloud in sync)
      - name: Push TinaCMS schema
        if: env.missing == 'false'
        run: npx tinacms schema:push
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}

      - name: Dev TinaCMS schema 
        run: yarn tinadev
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}

      - name: Build TinaCMS schema
        run: yarn tinabuild
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}

      - name: Commit generated files
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .tina __generated__ || true
          git commit -m "chore: update TinaCMS generated files" || echo "No changes to commit"
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
